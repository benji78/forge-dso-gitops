cluster:
  cluster:
    enablePDB: false
    imageName: <path:dso-s3ns-dev/data/env/conf-dso/apps/global/values#image | jsonPath
      {.repository.ghcr}>/cloudnative-pg/postgresql:16.2
    initdb:
      database: sonardb
      owner: dso_admin
    monitoring:
      enabled: false
    postgresql:
      parameters:
        max_worker_processes: '60'
      pg_hba:
      - host sonardb dso_admin all md5
      - host sonardb streaming_replica all md5
    primaryUpdateMethod: restart
    storage:
      size: 10Gi
  fullnameOverride: pg-cluster-sonar
  nameOverride: pg-cluster-sonar
cpn-ansible-job:
  job:
    command:
    - /bin/sh
    - -c
    - 'git clone https://github.com/cloud-pi-native/socle.git && \

      cd socle && \

      ansible-playbook post-install/sonarqube.yaml

      '
    extraEnvFrom:
    - secretRef:
        name: ansible-secret
    image:
      repository: <path:dso-s3ns-dev/data/env/conf-dso/apps/global/values#image |
        jsonPath {.repository.ghcr}>/cloud-pi-native/git-ansible
      tag: '1'
sonarqube:
  account:
    adminPasswordSecretName: sonarqube
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
    securityContext:
      runAsUser: 101
  adminJobAnnotations: {}
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: sonarqube-sonarqube
              app.kubernetes.io/instance: s3ns-dev-dso-sonarqube
              app.kubernetes.io/name: s3ns-dev-dso-sonarqube
          topologyKey: kubernetes.io/hostname
        weight: 100
  curlContainerImage: <path:dso-s3ns-dev/data/env/conf-dso/apps/global/values#image
    | jsonPath {.repository.docker}>/curlimages/curl:8.11.0
  fullnameOverride: sonarqube-sonarqube
  image:
    pullPolicy: IfNotPresent
    repository: <path:dso-s3ns-dev/data/env/conf-dso/apps/global/values#image | jsonPath
      {.repository.docker}>/sonarqube
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: acme-issuer
      nginx.ingress.kubernetes.io/proxy-body-size: 64m
      route.openshift.io/termination: edge
    enabled: true
    hosts:
    - name: <path:dso-s3ns-dev/data/env/conf-dso/apps/global/values#domain | jsonPath
        {.sonarqube}>
      path: /
      pathType: Prefix
    ingressClassName: <path:dso-s3ns-dev/data/env/conf-dso/apps/global/values#ingressClassName>
    labels:
      app: sonar
    tls:
    - hosts:
      - <path:dso-s3ns-dev/data/env/conf-dso/apps/global/values#domain | jsonPath
        {.sonarqube}>
      secretName: sonar-tls-secret
  initFs:
    enabled: false
  initSysctl:
    enabled: false
  jdbcOverwrite:
    enable: true
    jdbcSecretName: pg-cluster-sonar-app
    jdbcSecretPasswordKey: password
    jdbcUrl: jdbc:postgresql://pg-cluster-sonar-rw/sonardb?socketTimeout=1500
    jdbcUsername: dso_admin
  jvmCeOpts: -javaagent:/opt/sonarqube/extensions/plugins/sonarqube-community-branch-plugin-1.23.0.jar=ce
  jvmOpts: -javaagent:/opt/sonarqube/extensions/plugins/sonarqube-community-branch-plugin-1.23.0.jar=web
  monitoringPasscodeSecretKey: monitoring-password
  monitoringPasscodeSecretName: sonar-monitoring-password
  nameOverride: sonar
  plugins:
    install:
    - https://github.com/vaulttec/sonar-auth-oidc/releases/download/v2.1.1/sonar-auth-oidc-plugin-2.1.1.jar
    - https://github.com/mc1arke/sonarqube-community-branch-plugin/releases/download/1.23.0/sonarqube-community-branch-plugin-1.23.0.jar
    - https://github.com/cnescatlab/sonar-cnes-report/releases/download/5.0.0/sonar-cnes-report-5.0.0.jar
  postgresql:
    enabled: false
  prometheusExporter:
    enabled: false
  prometheusMonitoring:
    podMonitor:
      enabled: false
  serviceAccount:
    create: true
  sonarProperties:
    sonar.auth.oidc.allowUsersToSignUp: 'true'
    sonar.auth.oidc.autoLogin: 'false'
    sonar.auth.oidc.clientId.secured: <path:dso-s3ns-dev/data/env/conf-dso/apps/keycloak/values#client
      | jsonPath {.sonar.id}>
    sonar.auth.oidc.clientSecret.secured: <path:dso-s3ns-dev/data/env/conf-dso/apps/keycloak/values#client
      | jsonPath {.sonar.secret}>
    sonar.auth.oidc.enabled: 'true'
    sonar.auth.oidc.groupsSync: 'true'
    sonar.auth.oidc.groupsSync.claimName: groups
    sonar.auth.oidc.issuerUri: https://<path:dso-s3ns-dev/data/env/conf-dso/apps/global/values#domain
      | jsonPath {.keycloak}>/realms/dso
    sonar.auth.oidc.loginStrategy: Email
    sonar.auth.oidc.loginStrategy.customClaim.name: upn
    sonar.auth.oidc.scopes: openid generic
    sonar.core.serverBaseURL: https://<path:dso-s3ns-dev/data/env/conf-dso/apps/global/values#domain
      | jsonPath {.sonarqube}>
    sonar.plugins.risk.consent: ACCEPTED
  sonarWebContext: /
  sonarqubeFolder: /opt/sonarqube
  terminationGracePeriodSeconds: 60
